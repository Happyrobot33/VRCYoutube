name: "Release"
on:
  workflow_dispatch:
  
  push:
    tags:
      - 'v*.*.*'

jobs:
  sign:
    name: "Release"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      
      - name: "Get Version"
        id: get_version
        #read the version from src/manifest.json using fromJSON
        #print the version to the console
        run: |
          echo ::set-output name=version::$(jq -r .version src/manifest.json)
          echo "Version: $(jq -r .version src/manifest.json)"
      
      - name: "Generate Ver Number"
        id: generate_ver_number
        #generate a version number using the version from src/manifest.json
        #add 0.01 to the version number for the next release
        #print the version number to the console
        run: |
          echo ::set-output name=ver_number::$(echo $(jq -r .version src/manifest.json) + 0.01 | bc)
          echo "Version Number: $(echo $(jq -r .version src/manifest.json) + 0.01 | bc)"

      - name: "Update manifest ver number"
        # Increment manifest version number in src/manifest.json.
        # Increment the two digits after the last dot.
        uses: jossef/action-set-json-field@v2
        with:
          file: src/manifest.json
          field: version
          value: ${{ steps.generate_ver_number.outputs.ver_number }}

      - name: "Commit changes"
        # Commit the changes to the manifest.json file
        uses: EndBug/add-and-commit@v4
        with:
          author_name: "GitHub Actions"

        #CHROME BUILDING
        # pack zip and read manifest, can be reused in the following steps
      - name: "ZIP Extension"
        id: packExtensionDir
        uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
        with:
          extensionDir: 'src'
          zipFilePath: 'build/extension.zip'

      - name: "Pack Extension for Chrome"
        id: PackExtension
        uses: cardinalby/webext-buildtools-chrome-crx-action@v2
        with:
          # zip file made at the packExtensionDir step
          zipFilePath: 'build/extension.zip'
          crxFilePath: 'build/extension.crx'
          privateKey: ${{ secrets.CHROME_CRX_PRIVATE_KEY }}
          # The following is optional if you need update.xml file
          #updateXmlPath: 'build/update.xml'
          #updateXmlCodebaseUrl: 'https://server.com/extension.crx'

      #FIREFOX BUILDING
      - name: "web-ext build"
        id: web-ext-build
        uses: kewisch/action-web-ext@v1
        with:
          cmd: build
          source: src

      - name: "web-ext sign"
        id: web-ext-sign
        uses: kewisch/action-web-ext@v1
        with:
          cmd: sign
          source: ${{ steps.web-ext-build.outputs.target }}
          channel: unlisted
          apiKey: ${{ secrets.AMO_SIGN_KEY }}
          apiSecret: ${{ secrets.AMO_SIGN_SECRET }}
          timeout: 900000
        
        #rename the signed xpi file to "Firefox " with the version number at the end
      - name: "Rename Firefox xpi"
        run: |
          mv ${{ steps.web-ext-sign.outputs.target }} "Firefox ${{ steps.get_version.outputs.version }}.xpi"

        #rename the signed crx file to "Chrome " with the version number at the end
      - name: "Rename Chrome crx"
        run: |
          mv ${{ steps.PackExtension.outputs.crxFilePath }} "Chrome ${{ steps.get_version.outputs.version }}.crx"

        #create a release with the signed files
      - name: "Generate release tag"
        id: tag
        run: echo "::set-output name=release_tag::${{ steps.generate_ver_number.outputs.ver_number }}"

      - name: "Create Release"
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: |
            Chrome ${{ steps.generate_ver_number.outputs.ver_number }}.crx
            Firefox ${{ steps.generate_ver_number.outputs.ver_number }}.xpi
