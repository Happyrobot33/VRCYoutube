name: "Release"
on:
  workflow_dispatch:
  
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      
      - name: "Get Version"
        id: get_version
        #read the version from src/manifest.json using fromJSON
        #print the version to the console
        run: |
          echo ::set-output name=version::$(jq -r .version src/manifest.json)
          echo "Version: $(jq -r .version src/manifest.json)"

        #CHROME BUILDING
        # pack zip and read manifest, can be reused in the following steps
      - name: "ZIP Extension"
        id: packExtensionDir
        uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
        with:
          extensionDir: 'src'
          zipFilePath: 'build/extension.zip'
        
        #cache the build to use in subsequent jobs
      - name: "Cache build"
        uses: actions/cache@v2
        with:
          path: build/extension.zip
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            ${{ runner.os }}
        
        #create a release with the signed files
      - name: "Generate release tag"
        id: tag
        run: echo "::set-output name=release_tag::${{ steps.get_version.outputs.version }}"

      - name: "Create Release"
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: |
            build/extension.zip
    
  firefox:
    name: "Firefox Extension Release"
    runs-on: ubuntu-latest
    needs: build
    steps:
        #get the build
      - name: "Get build"
        uses: actions/cache@v2
        with:
          path: build/extension.zip
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            ${{ runner.os }}

        #FIREFOX BUILDING
      - name: "web-ext build"
        id: web-ext-build
        uses: kewisch/action-web-ext@v1
        with:
          cmd: build
          source: src

      - name: "web-ext sign"
        id: web-ext-sign
        uses: kewisch/action-web-ext@v1
        with:
          cmd: sign
          source: ${{ steps.web-ext-build.outputs.target }}
          channel: unlisted
          apiKey: ${{ secrets.AMO_SIGN_KEY }}
          apiSecret: ${{ secrets.AMO_SIGN_SECRET }}
          timeout: 900000
      
  chrome:
    name: "Chrome Extension Release"
    runs-on: ubuntu-latest
    needs: build
    steps:
        #get the build
      - name: "Get build"
        uses: actions/cache@v2
        with:
          path: build/extension.zip
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            ${{ runner.os }}

      - name: Upload to Chrome Web Store
        uses: mnao305/chrome-extension-upload@v4.0.1
        with:
          file-path: 'build/extension.zip'
          extension-id: odkmdijhfckbhehfjdckkkcljjidjmnh
          client-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          refresh-token: ${{ secrets.REFRESH_TOKEN }}
          publish: false
